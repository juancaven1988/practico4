package logicaPersistencia.accesoBD;

import java.io.FileInputStream;
import java.io.Serializable;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.List;
import java.util.Properties;

import logicaPersistencia.excepciones.PersistenciaException;
import logicaPersistencia.excepciones.SolicitudException;
import logicaPersistencia.valueObjects.VODueno;
import logicaPersistencia.valueObjects.VOMascota;
import logicaPersistencia.valueObjects.VOMascotaList;

public class Fachada implements iFachada, Serializable {

	private static final long serialVersionUID = 1L;
	private iFachada instancia;
	private String url;
	private String user;
	private String pass;

	private Fachada() throws PersistenciaException {

		instancia = this;
		Properties p = new Properties();
		String properties = "config/data.properties";

		try {
			p.load(new FileInputStream(properties));
			url = p.getProperty("url");
			user = p.getProperty("user");
			pass = p.getProperty("sena");

		} catch (Exception e) {

			throw new PersistenciaException("Error de persistencia");

		}

	}

	public iFachada getInstancia() throws PersistenciaException {

		if (instancia == null) {

			instancia = new Fachada();

		}

		return instancia;

	}

	public void nuevoDueno(VODueno voD) throws PersistenciaException, SolicitudException {

		try {

			Connection con = DriverManager.getConnection(url, user, pass);

			boolean existe = AccesoBD.BuscarDueno(con, voD.getCedula());

			if (!existe) {

				AccesoBD.insertarDueno(con, voD);
			} else {
				con.close();
				throw new SolicitudException("Dueno ya existe");
			}

			con.close();

		} catch (Exception e) {

			throw new PersistenciaException("Error de persistencia");
		}

	}

	public void nuevaMascota(VOMascota voM, int ced) throws PersistenciaException, SolicitudException {

		try {

			Connection con = DriverManager.getConnection(url, user, pass);

			boolean existe = AccesoBD.BuscarDueno(con, ced);

			if (existe) {
				AccesoBD.insertarMascota(ced, voM, con);

			} else {
				con.close();
				throw new SolicitudException("Dueno no existente");
			}

			con.close();

		} catch (Exception e) {

			throw new PersistenciaException("Error de persistencia");
		}

	}

	public void borrarDuenoMascota(int ced) throws PersistenciaException, SolicitudException {

		try {

			Connection con = DriverManager.getConnection(url, user, pass);

			boolean existe = AccesoBD.BuscarDueno(con, ced);

			if (existe) {

				AccesoBD.borrarDueno(con, ced);
			} else {
				con.close();
				throw new SolicitudException("Dueno no existe");
			}

			con.close();

		} catch (Exception e) {

			throw new PersistenciaException("Error de persistencia");
		}

	}

	public List<VODueno> listarDuenos() {
		// TODO Auto-generated method stub
		return null;
	}

	public List<VOMascotaList> listarMascotaDueno(int ced) {
		// TODO Auto-generated method stub
		return null;
	}

	public VOMascota obtenerMascota(int ced, int num) {
		// TODO Auto-generated method stub
		return null;
	}

	public int contarMascotas(int ced, String raza) {
		// TODO Auto-generated method stub
		return 0;
	}

}
